# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxken-2,
terget='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure = 'lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxken-2,
terget='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen-2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen-2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen-2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen-2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen-2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
minlen=2,
maxlen=2,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining frequent itemset of minimum length 2, maximum length 2,
# and frequency of occurence at least 1 in 1000, i.e support=.001
itemsets <- apriori(Groceries,
parameter = list(support=.001,
target='frequent' # to mine for itemsets
))
# Summary info of itemsets
summary(itemsets)
# Add lift as a measurement
quality(itemsets)$lift <- interestMeasure(itemsets, measure='lift', Groceries)
# Show top 10 result by lift
inspect(sort(itemsets, by ='lift', decreasing = T)[1:5])
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Summary info of rules
summary(rules)
# Show top 10 results by lift
inspect(sort(rules, by='lift', decreasing = T)[1:10])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Summary info of rules
summary(rules)
# Show top 10 results by lift
inspect(sort(rules, by='lift', decreasing = T)[1:5])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Summary info of rules
summary(rules)
# Add lift as a measurement
quality(rules)$chisquare <- interestMeasure(chisquare, measure='chisquare', Groceries)
# Show top 10 result by lift
inspect(sort(rules, by ='chisquare', decreasing = T)[1:5])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Summary info of rules
summary(rules)
# Add lift as a measurement
quality(rules)$chiSquared <- interestMeasure(chiSquared, measure='chiSquared', Groceries)
# Show top 10 result by lift
inspect(sort(rules, by ='chiSquared', decreasing = T)[1:5])
# Load the libraries
library("arules")
# Load the dataset
data("Groceries")
# Mining rules of minimum legth 5 and maximum length 5
# With minimum support=.001, and minimum confidence=.5
rules <- apriori(Groceries,
parameter = list(support=.001,
confidence=.5,
target='rules' # to mine for rules
))
# Summary info of rules
summary(rules)
# Add lift as a measurement
quality(rules)$chiSquared <- interestMeasure(rules, measure='chiSquared', Groceries)
# Show top 10 result by lift
inspect(sort(rules, by ='chiSquared', decreasing = T)[1:5])
